// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  cuid        String     @unique @default(cuid())
  email       String?    @unique
  name        String
  password    String?    @db.Text
  salt        String?    @db.Text
  googleId    String?    @unique
  googleToken String?    @db.Text
  Customer    Customer[]
  Order       Order[]
  Document    Document[]
}

model Customer {
  id           Int        @id @default(autoincrement())
  userId       Int
  firstname    String?
  lastname     String?
  email        String?
  street       String?
  streetnumber String?
  city         String?
  postalcode   String?
  phone        String?
  mobile       String?
  whatsapp     Boolean?
  shoesize     Float?
  disabled     Boolean?
  orders       Order[]
  document     Document[]
  user         User       @relation(fields: [userId], references: [id])
}

model Order {
  id            Int                  @id @default(autoincrement())
  userId        Int
  customerId    Int?
  creationDate  DateTime             @default(now())
  pending       Boolean
  shippingType  EOrderShippingType?
  comment       String?
  price         Float?
  taxes         EOrderTax?
  dueDate       DateTime?
  type          EOrderType?
  specification EOrderSpecification?
  brand         String?
  article       String?
  color         String?
  dealer        String?
  size          Float?
  name          String?
  customer      Customer?            @relation(fields: [customerId], references: [id])
  Document      Document[]
  user          User                 @relation(fields: [userId], references: [id])
}

model Document {
  id         Int       @id @default(autoincrement())
  userId     Int
  customerId Int?
  orderId    Int?
  googleId   String
  name       String?
  template   Boolean
  customer   Customer? @relation(fields: [customerId], references: [id])
  order      Order?    @relation(fields: [orderId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
}

enum EOrderShippingType {
  Send
  Collect
  Visit
}

enum EOrderType {
  Einlagen
  Einlagenarbeiten
  Abrolloptimierung
  Schuharbeiten
  Massschuhleisten
  Massschuhe
  Schuhbestellung
  Miscellaneous
}

enum EOrderSpecification {
  Sport
  Business
  Casual
  Workwear
  Massschuhe
  SchuhleistenEinleisten
  Erstlieferung
  Nachlieferung
}

enum EOrderTax {
  Nineteen
  Seven
}
